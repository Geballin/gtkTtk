/*
 *  tileGtk_Symbols.cpp
 * ------------------------
 *
 * This file is part of the Tile-Gtk package, a Tk/Tile based theme that uses
 * Gtk/GNOME for drawing.
 *
 * Copyright (C) 2004-2012 by:
 * Georgios Petasis, petasis@iit.demokritos.gr,
 * Software and Knowledge Engineering Laboratory,
 * Institute of Informatics and Telecommunications,
 * National Centre for Scientific Research (NCSR) "Demokritos",
 * Aghia Paraskevi, 153 10, Athens, Greece.
 */
/* THIS FILE IS AUTOMATICALLY GENERATED - DO NOT EDIT! */
#include "tileGtk_Symbols.h"
#ifdef    TILEGTK_LOAD_GTK_DYNAMICALLY
#if (TCL_MAJOR_VERSION >= 8) && (TCL_MINOR_VERSION >= 6)
#define LOAD_SYMBOLS_WITH_TCL
#endif

#ifndef LOAD_SYMBOLS_WITH_TCL
#include <gmodule.h>
#endif

Ptr_g_malloc TileGtk_g_malloc = 0;
Ptr_g_malloc0 TileGtk_g_malloc0 = 0;

int TileGtk_InitialiseSymbols_glib(Tcl_Interp *interp, Tcl_Obj *file_name) {
#ifdef LOAD_SYMBOLS_WITH_TCL
  Tcl_LoadHandle loadHandle;
  int status;
  status = Tcl_LoadFile(interp, file_name, NULL, 0, NULL, &loadHandle);
  if (status != TCL_OK) return status;
  TileGtk_g_malloc = (Ptr_g_malloc) Tcl_FindSymbol(interp, loadHandle, "g_malloc");
  if (TileGtk_g_malloc == NULL) return TCL_ERROR;
  TileGtk_g_malloc0 = (Ptr_g_malloc0) Tcl_FindSymbol(interp, loadHandle, "g_malloc0");
  if (TileGtk_g_malloc0 == NULL) return TCL_ERROR;
#else
  const char *fname = Tcl_GetString(file_name);
  GModule *m = g_module_open(fname, G_MODULE_BIND_LAZY);
  if (!m) {
    Tcl_SetResult(interp, (char *) "cannot open module: ", TCL_STATIC);
    Tcl_AppendResult(interp, fname, (char *) NULL);
    return TCL_ERROR;
  }
  if (!g_module_symbol(m, "g_malloc", (gpointer *) &TileGtk_g_malloc)) {
    Tcl_SetResult(interp, (char *) "cannot find symbol: ", TCL_STATIC);
    Tcl_AppendResult(interp, (char *) "g_malloc", (char *) NULL);
    return TCL_ERROR;
  }
  if (!g_module_symbol(m, "g_malloc0", (gpointer *) &TileGtk_g_malloc0)) {
    Tcl_SetResult(interp, (char *) "cannot find symbol: ", TCL_STATIC);
    Tcl_AppendResult(interp, (char *) "g_malloc0", (char *) NULL);
    return TCL_ERROR;
  }
#endif
  return TCL_OK;
}; /* TileGtk_InitialiseSymbols_glib */

#endif /* TILEGTK_LOAD_GTK_DYNAMICALLY */
